name: Build an push API to Github packages

on:
  push:
    branches: 
      - main
    paths:
      - "dnn-back/**"


env:

  REGISTRY: ghcr.io

  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
        

      - name: Add Envs
        run: python ./inject_secrets.py dnn-back/src/main/resources/application.yml
        env:
          CONTAINER_PORT: ${{ secrets.CONTAINER_PORT }}
          MONGO_HOST: ${{ secrets.MONGO_HOST }}
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASS: ${{ secrets.MONGO_PASS }}
          CONTAINER_SHARD: ${{ secrets.CONTAINER_SHARD }}
          DNN_HOST: ${{ secrets.DNN_HOST }}
          DNN_PORT: ${{ secrets.DNN_PORT }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./dnn-back/
          file: ./dnn-back/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max